apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "order.fullname" . }}
  labels:
    {{- include "order.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "order.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "order.selectorLabels" . | nindent 8 }}
      annotations:
        ad.datadoghq.com/tags: '{"env":"{{ .Values.environment }}"}'
        ad.datadoghq.com/{{ .Chart.Name }}.check_names: '["openmetrics"]'
        ad.datadoghq.com/{{ .Chart.Name }}.init_configs: '[{}]'
        ad.datadoghq.com/{{ .Chart.Name }}.instances: |
          [
            {
              "prometheus_url": "http://%%host%%:8080/actuator/prometheus",
              "namespace": "",
              "metrics": ["*"]
            }
          ]
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "order.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: { { .Values.environment } }
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_SERVICE_NAME
              value: { { include "order.fullname" . } }
            - name: DD_TAGS
              value: "env:{{ .Values.environment }}"
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_TRACE_ANALYTICS_ENABLED
              value: "true"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
